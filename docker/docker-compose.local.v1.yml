version: "3"
services:
  eldorado:
    container_name: eldorado
    build:
      context: eldorado
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: local
        TARGET_BRANCH: main
    depends_on:
      - dynamo_db
      - postgres_db
    environment:
      - WAIT_HOSTS=postgres_db:5432, dynamo_db:8000
      - WAIT_TIMEOUT=60
      - WAIT_BEFORE=30
      - AWS_ACCESS_KEY_ID='FakeAccessKey'
      - AWS_SECRET_ACCESS_KEY='FakeSecretAccessKey'
      - REGION='us-east-1'
      - ENVIRONMENT='local'
    ports:
      - "8080:8080"
    links:
      - "dynamo_db"
    networks:
      customnetwork:
        ipv4_address: 172.20.0.10
    # command:
    #     dynamodb describe-limits --endpoint-url http://dynamodb-local:5952 --region us-east-1

  postgres_db:
    # https://hub.docker.com/_/postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: chel
      POSTGRES_USER: miguel
    ports:
      - "5432:5432"
    networks:
      customnetwork:
        ipv4_address: 172.20.0.11

  dynamo_db:
    # https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html
    image: amazon/dynamodb-local:latest
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    container_name: dynamo_db
    ports:
      - "8000:8000"
    networks:
      customnetwork:
        ipv4_address: 172.20.0.12
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal

networks:
  customnetwork:
    ipam:
      config:
        - subnet: 172.20.0.0/16
